/* src/components/Timeline.css */
:root {
  /* tweak these two to control everything */
  --branch-length: 6rem;
  --branch-gap:    2rem;
}


/*-----------------------------MAIN TIMELINE CODE ---------------------------*/

.timeline {
  position: relative;
  padding: 4rem 0;
  width: 90%;
  max-width: 600px;
  margin: 0 auto;
  transform: translateY(1.5rem);
}

.timeline::before {
  content: '';
  position: absolute;
  left: 50%;
  top: 0;
  bottom: calc(6rem + 0.625rem + 4px);
  width: 4px;
  background: #7CFC00;           /* neon green */
  transform-origin: top center;  /* pivot at the top */
  transform: translateX(-50%) scaleY(0);
  animation: growLine 1s ease-out forwards;
}


/* animate only the rail */
@keyframes growLine {
  to {
    transform: translateX(-50%) scaleY(1);
  }
}

.timeline-item {
  position: relative;
  display: flex;
  align-items: center;
  margin: 6rem 0;
}

/* Make the whole item clickable and change cursor */
.timeline-item {
  cursor: pointer;
}

/* 1) make sure .content will animate */
.timeline-item .content {
  /* pivot from center */
  transform-origin: center center;
  /* animate scale and shadow */
  transition: transform 0.3s ease-out,
              box-shadow 0.3s ease-out;
}

/* 2) grow + shadow on hover */
.timeline-item:hover > .content {
  transform: scale(1.05);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  cursor: pointer;
}

/* 3) tiny “pressed” effect */
.timeline-item:active > .content {
  transform: scale(0.98);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}

/* ---------- rail shift when a wide card is open ---------- */
.timeline--shift {
  transform: translateX(-40%);
  transition: transform 0.35s ease;
}

/* ---------- new utility styles ---------- */
.content-header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.demo-btn {
  background: none;
  border: none;
  padding: 0.25rem;
  cursor: pointer;
  color: #7cfc00;                /* neon green matches theme */
}

.demo-wrapper {
  width: 100%;
  margin-top: 1rem;
}

/* make .content a row when open so demo appears left of text */
.content {
  position: relative;           /* lets us abs‑position icon‑bar */
}

.content.open {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  width: clamp(22rem, 60vw, 48rem);
  /* ---------- tweak open card so 40 % grows left, 60 % right ---------- */
  transform: translateX(-40%);      /* push 40 % to the left */
}

/* left‑hand demo pane */
.demo-wrapper {
  flex: 0 0 auto;               /* don't stretch */
}

/* text on the right */
.text-stack {
  flex: 1 1 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* ---------- handwritten demo widget ---------- */
.hdemo {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.hdemo-canvas {
  border: 2px solid #7cfc00;
  border-radius: 0.5rem;
  background: black;
  touch-action: none;           /* smoother drawing on touch */
}
.hdemo-btns {
  margin-top: 0.5rem;
  display: flex;
  gap: 0.5rem;
}
.hdemo-btns button {
  padding: 0.25rem 0.75rem;
  border-radius: 0.25rem;
  border: 1px solid #7cfc00;
  background: transparent;
  color: #7cfc00;
  cursor: pointer;
}
.hdemo-result {
  margin-top: 0.5rem;
  font-size: 0.9rem;
}

/* ---------- icon bar bottom‑right ---------- */
.icon-bar {
  position: absolute;
  bottom: 0.4rem;
  right: 0.4rem;
  display: flex;
  gap: 0.4rem;
}
.demo-btn {
  background: none;
  border: none;
  cursor: pointer;
  color: #7cfc00;
}


/*--------------------------------BRANCH LINE CODE----------------------------------*/

/* --- branch styling & animation --- */
.branch {
  position: absolute;
  top: 50%;   
  /* start just outside the right edge of the circle: */
  left: calc(50% + 0.40rem + 4px);
  width: 0;                   
  height: 4px;
  background: #7CFC00;
  transform-origin: left center;
  animation: branchGrow 0.5s ease-out forwards;
}

/* for those “reversed” items, mirror it on the right side */
.timeline-item:nth-child(even) .branch {
  left: auto;
  right: calc(50% + 0.40rem + 4px);
  transform-origin: right center;
}

/* Now fade & slide the content in after the branch is done */
.content {
  opacity: 0;
}

/* 2) odd boxes fade-in from the left (moving right) */
.timeline-item:nth-child(odd) .content {
  animation: fadeRight 0.6s ease-out forwards;
  animation-delay: 0.5s; /* after branchGrow */
}

/* 3) even boxes fade-in from the right (moving left) */
.timeline-item:nth-child(even) .content {
  animation: fadeLeft 0.6s ease-out forwards;
  animation-delay: 0.5s;
}

/* match the length of your static offset */
/* timeline-item branchGrow keyframes */
@keyframes branchGrow {
  to { width: var(--branch-length); }
}


.timeline-item:nth-child(odd) {
  flex-direction: row-reverse;
}

.timeline-item:nth-child(even) .content {
  margin-left: -0.5rem;    /* original horizontal offset */
  margin-right: 0;      /* make sure the other side is zero */
  text-align: center;   /* center the text inside */
}

.timeline-item:nth-child(odd) .content {
  margin-right: -0.5rem;   /* original offset the other direction */
  margin-left: 0;       /* reset the opposite side */
  text-align: center;   /* center the text */
}

.marker {
  position: absolute;
  left: 50%;
  width: 1.5rem;
  height: 1.5rem;
  background: black;
  border: 4px solid #7CFC00;
  border-radius: 50%;
  transform: translateX(-50%);
}

/* make your card a column‑flex box that truly centers its children */
.content {
  /* fixed size or min‑size to your taste */
  width: 12rem;
  min-height: 6rem;

  /* padding counts inside the box */
  box-sizing: border-box;
  padding: 1rem;

  /* center everything, stacked vertically */
  display: flex;
  flex-direction: column;
  align-items: center;      /* horizontal centering */
  justify-content: center;  /* vertical centering */

  text-align: center;
  background: rgba(255,255,255,0.1);
  border-radius: 0.5rem;
  overflow: hidden;
}

/* reset margins so they don’t push you off center */
.content > * {
  margin: 0;
}

.loading-sentinel {
  height: 1px;
}

/* simple fade‑in animation */
@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: none;
  }
}


/* 1) Define the two directional fades */
@keyframes fadeRight {
  0% {
    opacity: 0;
    transform: translateX(-30px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeLeft {
  0% {
    opacity: 0;
    transform: translateX(30px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/*--------------------------------MOBILE CODE START----------------------------------*/
@media (max-width: 600px) {
  /* hide the rail graphics */
  .marker,
  .branch,
  .timeline::before {
    display: none;
  }

  .timeline {
    padding: 4rem 0;
    width: 90%;
    max-width: 600px;
    margin: 0 auto;
  }
  .timeline-item {
    display: block;
    margin: 2rem 0;
  }

  .content {
    width: calc(100% - 2rem);
    margin: 0 auto;
    padding: 1rem;
    box-sizing: border-box;

    /* left-border as your “rail” */
    border-left: 4px solid #7CFC00;

    background: rgba(255,255,255,0.1);
    border-radius: 0.5rem;
    text-align: left;

    /* entrance animation using our CSS variable */
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.6s ease-out forwards;
    animation-delay: var(--fade-delay, 0s);
  }
}
/*--------------------------------MOBILE CODE END----------------------------------*/